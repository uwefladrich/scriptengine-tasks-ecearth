name: PyTest
on: push

env:
  TEST_DATA_REF: "https://github.com/valentinaschueller/ece-4-monitoring-test-data/archive/refs/heads/main.zip"
  TEST_DATA_DOWNLOAD: "test-data"

jobs:
    pytest:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [ '3.6', '3.7', '3.8', '3.9' ]

      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: 62-github-actions
            
        - name: Setup Python
          uses: actions/setup-python@v3
          with:
            python-version: ${{matrix.python-version}}

        - name: Download and install conda
          run: |
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            bash miniconda.sh -b -p $HOME/miniconda
            source "$HOME/miniconda/etc/profile.d/conda.sh"
            hash -r
            conda config --set always_yes yes --set changeps1 no
            conda config --add channels conda-forge
            conda update -q conda

        - name: Create environment and load dependencies that PyPI cannot find
          run: |
            conda create -n test-environment python=${{matrix.python-version}}
            $CONDA/bin/activate test-environment
            conda env update -n test-environment --file conda_environment.yml
            conda install pip
            python -m pip install --upgrade pip
            conda list

        - name: Install package + remaining PyPI dependencies
          run: pip install .
            
        - name: Download test data
          run: |
            mkdir ${TEST_DATA_DOWNLOAD};
            wget -O ${TEST_DATA_DOWNLOAD}/test-data.zip ${TEST_DATA_REF};
            unzip -q ${TEST_DATA_DOWNLOAD}/test-data.zip -d ${TEST_DATA_DOWNLOAD};
            mv ${TEST_DATA_DOWNLOAD}/ece-4-monitoring-test-data-main/ tests/testdata;

        - name: Install dependencies for testing
          run: |
            python -m pip install pytest
            python -m pip install coverage
            python -m pip install coveralls
            python -m pip install flake8
        - name: Lint with flake8
          run: |
            # Syntax errors or undefined names
            flake8 --count --select=E9,F63,F7,F82 --show-source --statistics monitoring/
            flake8 --count --select=E9,F63,F7,F82 --show-source --statistics helpers/
            flake8 --count --select=E9,F63,F7,F82 --show-source --statistics tests/
            # All other stuff
            flake8 --exit-zero --count --statistics --exclude=__init__.py --max-line-length=88 monitoring/
            flake8 --exit-zero --count --statistics --exclude=__init__.py --max-line-length=88 helpers/
            flake8 --exit-zero --count --statistics --exclude=__init__.py --max-line-length=88 tests/
        - name: Run PyTest
          run: |
            coverage run -m pytest
            coveralls
